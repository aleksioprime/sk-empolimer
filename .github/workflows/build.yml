name: Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run backend tests
      run: |
        echo "Тесты бэкенда пока отключены. Возвращаем успешный статус."

    - name: Run frontend tests
      run: |
        echo "Тесты фронтенда пока отключены. Возвращаем успешный статус."

  build:
    runs-on: ubuntu-latest
    needs: test

    outputs:
      build_backend: ${{ steps.check_changes.outputs.BUILD_BACKEND }}
      build_frontend: ${{ steps.check_changes.outputs.BUILD_FRONTEND }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Export ENV_VARS
      run: |
        printf "%s\n" "${{ secrets.ENV_VARS }}" | while IFS= read -r line; do
          if [[ ! -z "$line" && "$line" != \#* ]]; then
            echo "$line" >> $GITHUB_ENV
          fi
        done

    - name: Check changed files
      id: check_changes
      run: |
        echo "Checking changed files..."
        CHANGED_BACKEND=$(git diff --name-only HEAD^ HEAD | grep -E '^app/' || true)
        CHANGED_FRONTEND=$(git diff --name-only HEAD^ HEAD | grep -E '^front/' || true)

        if [[ -n "$CHANGED_BACKEND" ]]; then
          echo "Backend changed"
          echo "BUILD_BACKEND=true" >> $GITHUB_ENV
          echo "BUILD_BACKEND=true" >> $GITHUB_OUTPUT
        else
          echo "Backend not changed"
          echo "BUILD_BACKEND=false" >> $GITHUB_ENV
          echo "BUILD_BACKEND=false" >> $GITHUB_OUTPUT
        fi

        if [[ -n "$CHANGED_FRONTEND" ]]; then
          echo "Frontend changed"
          echo "BUILD_FRONTEND=true" >> $GITHUB_ENV
          echo "BUILD_FRONTEND=true" >> $GITHUB_OUTPUT
        else
          echo "Frontend not changed"
          echo "BUILD_FRONTEND=false" >> $GITHUB_ENV
          echo "BUILD_FRONTEND=false" >> $GITHUB_OUTPUT
        fi

    - name: Build and push backend image
      if: steps.check_changes.outputs.BUILD_BACKEND == 'true'
      run: |
        docker build -t aleksioprime/empolimer-back:latest ./web/back
        docker push aleksioprime/empolimer-back:latest

    - name: Build and push worker image
      run: |
        docker build -t aleksioprime/empolimer-worker:latest ./web/worker
        docker push aleksioprime/empolimer-worker:latest

    - name: Build and push frontend image
      if: steps.check_changes.outputs.BUILD_FRONTEND == 'true'
      run: |
        docker build --target prod \
          --build-arg VITE_LOGGING=$VITE_LOGGING \
          -t aleksioprime/empolimer-front:latest ./web/front

        docker push aleksioprime/empolimer-front:latest
